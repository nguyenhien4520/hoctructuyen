<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
        <a class="navbar-brand" href="#">Admin Panel</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
            aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/admin">Quay về trang Admin</a>
                </li>
            </ul>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Quản Lý Học Sinh</h1>
            <div>
                <button class="btn btn-primary me-2" onclick="document.getElementById('fileInput').click()">
                    <i class="fa fa-upload" aria-hidden="true"></i> Tải lên danh sách học sinh
                </button>
                <input type="file" id="fileInput" style="display: none;" />
                <button type="button" class="btn btn-success" id="addStudent" data-bs-toggle="modal"
                    data-bs-target="#inforModal">
                    <i class="fa fa-plus-square" aria-hidden="true"></i> Thêm học sinh mới
                </button>
            </div>
        </div>

        <!-- Table -->
        <table class="table table-striped table-hover">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Họ và tên</th>
                    <th scope="col">Tên tài khoản</th>
                    <th scope="col">Ngày tạo</th>
                    <th scope="col">Hành động</th>
                </tr>
            </thead>
            <tbody>
                {{#each student}}
                <tr>
                    <th scope="row">{{sum @index 1}}</th>
                    <td>{{this.name}}</td>
                    <td>{{this.username}}</td>
                    <td>{{formatDate this.createdAt 'dd/MM/yyyy HH:mm'}}</td>
                    <td>
                        <button class="btn btn-success btn-sm">View</button>
                        <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#inforModal"
                            data-id="{{this._id}}">Edit</button>
                        <button class="btn btn-danger btn-sm btn-delete-student" data-id="{{this._id}}">Delete</button>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <!-- Add Student Modal -->
    <div class="modal fade" id="inforModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Thêm học sinh</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="form-add-student">
                        <input type="hidden" id="studentId" name="studentId">
                        <div class="mb-3">
                            <label for="name" class="col-form-label">Họ và tên:</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="username" class="col-form-label">Username:</label>
                            <input type="text" class="form-control" id="username" name="username" required>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="col-form-label">Password:</label>
                            <input type="password" class="form-control" id="password" name="password" required>
                        </div>
                        <div class="mb-3">
                            <label for="dob" class="col-form-label">Ngày sinh:</label>
                            <input type="date" class="form-control" id="dob" name="dob" required>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" form="form-add-student" class="btn btn-success" id="btn-add-edit">Add
                        student</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap and Popper.js scripts -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous">
        </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"
        integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy"
        crossorigin="anonymous"></script>

    <!-- Custom script -->
    <script>
        const optionsDate = {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
        };
        $(document).ready(function () {
            // Xử lý khi modal được hiển thị
            $("#inforModal").on("show.bs.modal", async function (e) {
                const button = $(e.relatedTarget);
                const studentId = button.data('id');
                if (studentId) {
                    // Chế độ sửa học sinh
                    $('#exampleModalLabel').text('Sửa thông tin học sinh');
                    $('#form-add-student').attr('data-mode', 'edit');
                    $('#studentId').val(studentId);
                    $('#btn-add-edit').text('Save');

                    try {
                        const response = await fetch(`/admin/students/${studentId}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });

                        if (!response.ok) {
                            throw new Error('Failed to fetch student data');
                        }

                        const result = await response.json();
                        $('#name').val(result.data.name);
                        $('#username').val(result.data.username);
                        $('#password').val(result.data.password);
                        const date = new Date(result.data.dateOfBirth);
                        const formattedDate = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
                        $('#dob').val(formattedDate);

                    } catch (error) {
                        console.error('Error:', error);
                    }
                } else {
                    // Chế độ thêm học sinh mới
                    $('#exampleModalLabel').text('Thêm học sinh');
                    $('#form-add-student').attr('data-mode', 'add');
                    $('#form-add-student')[0].reset();
                    $('#studentId').val('');
                    $('#btn-add-edit').text('Add student');
                }
            });

            // Xử lý khi form được submit
            $("#form-add-student").on("submit", async function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const data = {
                    name: formData.get('name'),
                    username: formData.get('username'),
                    password: formData.get('password'),
                    dob: formData.get('dob'),
                };

                const mode = $('#form-add-student').attr('data-mode');
                let url = '/admin/students/add';
                let method = 'POST';

                if (mode == 'edit') {
                    const studentId = $('#studentId').val();
                    url = `/admin/students/${studentId}`;
                    method = 'PUT';
                    data._id = studentId;
                }

                try {
                    const response = await fetch(url, {
                        method: method,
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    if (!response.ok) {
                        throw new Error(`Failed to ${mode == 'edit' ? 'edit' : 'add'} student`);
                    } else {
                        window.location.reload();
                    }

                    /*  const result = await response.json();
  
                      console.log(result);
                      if (mode == 'add') {
                          const newRow =
                              `<tr>
                          <th scope="row">${$('table tbody tr').length + 1}</th>
                          <td>${result.data.name}</td>
                          <td>${result.data.username}</td>
                          <td>${new Date().toLocaleString('en-GB', optionsDate).replace(',', '')}</td>
                          <td>
                              <button class="btn btn-success btn-sm">View</button>
                              <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#inforModal" data-id="${result.data._id}">Edit</button>
                              <button class="btn btn-danger btn-sm" data-id="${result.data._id}">Delete</button>
                          </td>
                      </tr>`;
                          $('table tbody').append(newRow);
                      } else {
                          const row = $(`button[data-id='${result.data._id}']`).closest('tr');
                          row.find('td').eq(0).text(result.data.name);
                          row.find('td').eq(1).text(result.data.username);
                          row.find('td').eq(2).text(result.data.dob);
                      }*/

                    // Reset form và đóng modal
                    this.reset();
                    $('#inforModal').modal('hide');

                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });

        $('.btn-delete-student').on('click', async function (e) {
            const studentId = $(this).data('id');
            alert("Bạn có chắc chắn muốn xóa");
            try {
                const response = await fetch(`/admin/students/${studentId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                if (response.ok) {
                    console.log('Student deleted successfully!');
                    window.location.reload(); // Reload the page
                } else {
                    throw new Error('Failed to delete student');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

       /* document.getElementById('fileInput').addEventListener('change', async function () {
            const fileInput = document.getElementById('fileInput');
            const file = fileInput.files[0];

            if (file) {
                const formData = new FormData();
                formData.append('file', file);

                try {
                    const response = await fetch('/admin/students/upload', {
                        method: 'POST',
                        body: formData
                    });

                    if (!response.ok) {
                        throw new Error('Error uploading file');
                    }

                    const result = await response.json();
                    console.log(result);
                    alert('File uploaded successfully');
                    window.location.reload(); // Reload the page
                } catch (error) {
                    console.error('Error:', error);
                }
            }
        });*/

    </script>

</body>

</html>